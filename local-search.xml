<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>MacOS系统网络配置</title>
    <link href="/2023/11/27/MacOS%E7%BD%91%E7%BB%9C%E9%85%8D%E7%BD%AE/"/>
    <url>/2023/11/27/MacOS%E7%BD%91%E7%BB%9C%E9%85%8D%E7%BD%AE/</url>
    
    <content type="html"><![CDATA[<h2 id="IP地址配置"><a href="#IP地址配置" class="headerlink" title="IP地址配置"></a>IP地址配置</h2><h3 id="手动指定IP"><a href="#手动指定IP" class="headerlink" title="手动指定IP"></a>手动指定IP</h3><p>以下3个命令都可以完成IP地址的配置：</p><ul><li>ifconfig interface [address_family] [address [netmask]]</li><li>ipconfig set interface-name (MANUAL | INFORM) ip-address subnet-mask</li><li>networksetup -setmanual <networkservice> <ip> <subnet> <router></li></ul><p>手动指定IP举例：</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-attribute">sudo</span> ifconfig en0 inet <span class="hljs-number">192.168.1.10</span> netmask <span class="hljs-number">255.255.255.0</span><br>sudo ipconfig set en0 MANUAL <span class="hljs-number">192.168.1.10</span> <span class="hljs-number">255.255.255.0</span><br>sudo networksetup -setmanual Wi-Fi <span class="hljs-number">192.168.1.10</span> <span class="hljs-number">255.255.255.0</span> <span class="hljs-number">192.168.1.1</span><br></code></pre></td></tr></table></figure><p>注意ifconfig和ipconfig都是指定网口设备名称，而networksetup要求使用MacOS为网口设置的别名（所谓“network service”）来指定网口。</p><h3 id="使用DHCP配置IP"><a href="#使用DHCP配置IP" class="headerlink" title="使用DHCP配置IP"></a>使用DHCP配置IP</h3><p>可以使用以下2个命令来重新获取DHCP配置：</p><ul><li>ipconfig set interface-name (DHCP | BOOTP)</li><li>networksetup -setdhcp <networkservice></li></ul><p>使用DHCP动态获取IP地址举例：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">ipconfig <span class="hljs-built_in">set</span> en0 DHCP<br>networksetup -setdhcp Wi-Fi<br></code></pre></td></tr></table></figure><p>注意ifconfig和ipconfig都是指定网口设备名称，而networksetup要求使用MacOS为网口设置的别名（所谓“network service”）来指定网口。</p><h2 id="配置默认网关"><a href="#配置默认网关" class="headerlink" title="配置默认网关"></a>配置默认网关</h2><p>可以使用以下命令配置默认网关：</p><ul><li>networksetup -setmanual <networkservice> <ip> <subnet> <router></li><li>route [add | change ] default <gateway></li><li>route [add | change ] -net 0.0.0.0 <gateway></li></ul><p>默认网关配置举例：</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-attribute">sudo</span> networksetup -setmanual Wi-Fi <span class="hljs-number">192.168.1.10</span> <span class="hljs-number">255.255.255.0</span> <span class="hljs-number">192.168.1.1</span><br></code></pre></td></tr></table></figure><p>以下两条命令等价:</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs routeros">sudo<span class="hljs-built_in"> route </span><span class="hljs-built_in">add</span><span class="hljs-built_in"> default </span>192.168.1.1<br>sudo<span class="hljs-built_in"> route </span><span class="hljs-built_in">add</span> -net 0.0.0.0 192.168.1.1<br></code></pre></td></tr></table></figure><p>如果已存在默认路由，你可能需要先删除现有默认路由，然后再添加默认路由：</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs routeros">sudo<span class="hljs-built_in"> route </span>delete<span class="hljs-built_in"> default</span><br><span class="hljs-built_in"></span>sudo<span class="hljs-built_in"> route </span><span class="hljs-built_in">add</span><span class="hljs-built_in"> default </span>192.168.1.1<br></code></pre></td></tr></table></figure><p>或者你也可以替换现有默认路由：</p><p><code> sudo route change default 192.168.1.1</code></p><h2 id="添加静态路由"><a href="#添加静态路由" class="headerlink" title="添加静态路由"></a>添加静态路由</h2><p>可以使用以下命令添加路由:</p><p><code> sudo route [-n] [add | delete | change] [-net | -host] [-ifscope boundif] destination gateway [netmask]</code></p><p>首先查看当前路由表：</p><figure class="highlight tap"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs tap">macbook$ netstat -nr<br>Routing tables<br><br>Internet:<br>Destination        Gateway            Flags        Refs      Use   Netif Expire<br>default            192.168.1.1        UGSc          <span class="hljs-number"> 21 </span>      <span class="hljs-number"> 5 </span>    en0<br>127                127.0.0.1          UCS            <span class="hljs-number"> 0 </span>      <span class="hljs-number"> 0 </span>    lo0<br>127.0.0.1          127.0.0.1          UH             <span class="hljs-number"> 1 </span>   <span class="hljs-number"> 1699 </span>    lo0<br>169.254            link<span class="hljs-comment">#4             UCS             0        0     en0</span><br>...<br></code></pre></td></tr></table></figure><h3 id="方法一："><a href="#方法一：" class="headerlink" title="方法一："></a>方法一：</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">macbook$ sudo route add -net 10.1.1.1/32 192.168.1.1<br>Password:<br>add net 10.1.1.1: gateway 192.168.1.1<br></code></pre></td></tr></table></figure><p>查看当前路由表:</p><figure class="highlight accesslog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs accesslog">macbook$ netstat -nr<br>Routing tables<br><br>Internet:<br>Destination        Gateway            Flags        Refs      Use   Netif Expire<br>default            <span class="hljs-number">192</span>.<span class="hljs-number">168</span>.<span class="hljs-number">1</span>.<span class="hljs-number">1</span>        UGSc           <span class="hljs-number">23</span>        <span class="hljs-number">5</span>     en0<br><span class="hljs-number">10.1.1.1</span>/<span class="hljs-number">32</span>        <span class="hljs-number">192</span>.<span class="hljs-number">168</span>.<span class="hljs-number">1</span>.<span class="hljs-number">1</span>        UGSc            <span class="hljs-number">0</span>        <span class="hljs-number">0</span>     en0<br><span class="hljs-number">127</span>                <span class="hljs-number">127</span>.<span class="hljs-number">0</span>.<span class="hljs-number">0</span>.<span class="hljs-number">1</span>          UCS             <span class="hljs-number">0</span>        <span class="hljs-number">0</span>     lo0<br><span class="hljs-number">127.0.0.1</span>          <span class="hljs-number">127</span>.<span class="hljs-number">0</span>.<span class="hljs-number">0</span>.<span class="hljs-number">1</span>          UH              <span class="hljs-number">1</span>     <span class="hljs-number">1699</span>     lo0<br>...<br></code></pre></td></tr></table></figure><h3 id="方法二"><a href="#方法二" class="headerlink" title="方法二:"></a>方法二:</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">macbook$ sudo route add -net 10.1.1.2 -netmask 255.255.255.255 192.168.1.1<br>add net 10.1.1.2: gateway 192.168.1.1<br></code></pre></td></tr></table></figure><h2 id="设置DNS"><a href="#设置DNS" class="headerlink" title="设置DNS"></a>设置DNS</h2><h3 id="指定DNS服务器"><a href="#指定DNS服务器" class="headerlink" title="指定DNS服务器"></a>指定DNS服务器</h3><p>配置命令:</p><p><code> networksetup -setdnsservers &lt;networkservice&gt; &lt;dns1&gt; [dns2] [...]</code></p><p>示例:</p><p><code>sudo networksetup -setdnsservers Wi-Fi 114.114.114.114 114.114.114.115</code></p><p>不指定DNS地址参数时，清空配置DNS服务器:</p><p><code> sudo networksetup -setdnsservers Wi-Fi</code></p><p>查看当前配置的DNS服务器<br>方法一：查看手动指定的DNS服务器地址<br>命令:</p><p><code> networksetup -getdnsservers &lt;networkservice&gt;</code></p><p>注意：此命令只能查看手动指定的DNS服务器地址，无法查看到由DHCP获得的DNS地址！</p><p>示例：</p><p><code> sudo networksetup -getdnsservers Wi-Fi</code></p><p>方法二: 查看由DHCP配置的DNS地址<br>命令：</p><p><code> ipconfig getpacket interface-name</code></p><p>此命令用以查看从DHCP获得的相关网络配置信息，同时也包含DNS配置信息！</p><p>示例：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo ipconfig getpacket en0<br>Password:<br>op = BOOTREPLY<br>htype = 1<br>flags = 0<br>hlen = 6<br>hops = 0<br>xid = 0x1da0b2e6<br>secs = 0<br>ciaddr = 0.0.0.0<br>yiaddr = 192.168.1.101<br>siaddr = 0.0.0.0<br>giaddr = 0.0.0.0<br>chaddr = 48:d7:5:cb:7d:bd<br>sname = <br>file = <br>options:<br>Options count is 7<br>dhcp_message_type (uint8): ACK 0x5<br>server_identifier (ip): 192.168.1.1<br>lease_time (uint32): 0xffffffff<br>subnet_mask (ip): 255.255.255.0<br>router (ip_mult): &#123;192.168.1.1&#125;<br>domain_name_server  (ip_mult): &#123;114.114.114.114, 114.114.115.115&#125;<br>end (none): <br></code></pre></td></tr></table></figure><h3 id="清除DNS缓存"><a href="#清除DNS缓存" class="headerlink" title="清除DNS缓存"></a>清除DNS缓存</h3><p>OS X 10.9 (Mavericks):</p><p><code>macbook$ dscacheutil -flushcache; sudo killall -HUP mDNSResponder</code></p><p>OS X 10.10 (Yosemite):</p><p><code>macbook$ sudo discoveryutil udnsflushcaches</code></p><p>Versions 10.10.4+:</p><p><code>macbook$ sudo dscacheutil -flushcache;sudo killall -HUP mDNSResponder</code></p><p>OS X 10.11 (El Capitan) and OS X 10.12 (Sierra):</p><p><code>macbook$ sudo killall -HUP mDNSResponder</code></p><p>OS X 10.12.4:</p><p><code>macbook$ sudo killall -HUP mDNSResponder; sudo killall mDNSResponderHelper; sudo dscacheutil -flushcache;</code></p>]]></content>
    
    
    
    <tags>
      
      <tag>macos</tag>
      
      <tag>网络配置</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2023/11/27/hello-world/"/>
    <url>/2023/11/27/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>mips平台下交叉编译shellinabox</title>
    <link href="/2021/10/26/%E4%BA%A4%E5%8F%89%E7%BC%96%E8%AF%91shellinabox/"/>
    <url>/2021/10/26/%E4%BA%A4%E5%8F%89%E7%BC%96%E8%AF%91shellinabox/</url>
    
    <content type="html"><![CDATA[<p>编译环境：openwrt-19.07 MT7621-MIPS</p><h1 id="下载openwrt-shellinabox构建包"><a href="#下载openwrt-shellinabox构建包" class="headerlink" title="下载openwrt-shellinabox构建包"></a>下载openwrt-shellinabox构建包</h1><p>克隆openwrt-shellinabox到package&#x2F;shellinabox 下</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">git clone https://github.com/openwrt-develop/openwrt-shellinabox package/shellinabox<br></code></pre></td></tr></table></figure><p>openwrt-shellinabox的Makefile如下</p><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><code class="hljs makefile"><span class="hljs-keyword">include</span> <span class="hljs-variable">$(TOPDIR)</span>/rules.mk<br><br>PKG_NAME:=shellinabox<br>PKG_VERSION:=2.20<br>PKG_RELEASE:=<span class="hljs-variable">$(PKG_SOURCE_VERSION)</span><br><br>PKG_SOURCE_PROTO:=git<br>PKG_SOURCE_URL:=https://github.com/shellinabox/shellinabox.git<br>PKG_SOURCE_SUBDIR:=<span class="hljs-variable">$(PKG_NAME)</span>-<span class="hljs-variable">$(PKG_VERSION)</span><br>PKG_SOURCE_VERSION:=98e6eebc6c2026fb126a458c6cb5a2541447258e<br>PKG_SOURCE:=<span class="hljs-variable">$(PKG_NAME)</span>-<span class="hljs-variable">$(PKG_VERSION)</span>.tar.gz<br><br>PKG_FIXUP:=autoreconf<br><br><span class="hljs-keyword">include</span> <span class="hljs-variable">$(INCLUDE_DIR)</span>/package.mk<br><br><span class="hljs-keyword">define</span> Package/shellinabox <br>  SECTION:=net<br>  CATEGORY:=Network<br>  TITLE:=a web based terminal emulator<br>  URL:=https://github.com/shellinabox/shellinabox<br>  DEPENDS:=+zlib +libopenssl +busybox +@BUSYBOX_CUSTOM +@BUSYBOX_CONFIG_LOGIN<br><span class="hljs-keyword">endef</span><br><br><span class="hljs-keyword">define</span> Package/shellinabox/description<br>Shell In A Box implements a web server that <br>can <span class="hljs-keyword">export</span> arbitrary command line tools to <br>a web based terminal emulator. This emulator <br>is accessible to any JavaScript and CSS <br>enabled web browser and does not require any additional browser plugins.<br><span class="hljs-keyword">endef</span><br><br>CONFIGURE_ARGS += --disable-utmp<br><br><span class="hljs-keyword">define</span> Package/shellinabox/install<br><span class="hljs-variable">$(INSTALL_DIR)</span> $(1)/usr/sbin $(1)/etc/init.d $(1)/etc/shellinabox<br><span class="hljs-variable">$(INSTALL_BIN)</span> <span class="hljs-variable">$(PKG_BUILD_DIR)</span>/shellinaboxd $(1)/usr/sbin<br><span class="hljs-variable">$(INSTALL_BIN)</span> ./files/shellinaboxd.init $(1)/etc/init.d/shellinaboxd<br><span class="hljs-variable">$(INSTALL_DATA)</span> <span class="hljs-variable">$(PKG_BUILD_DIR)</span>/shellinabox/*.css $(1)/etc/shellinabox<br><span class="hljs-variable">$(PKG_BUILD_DIR)</span>/make-chained-cert.sh &gt; $(1)/etc/shellinabox/certificate.pem<br><span class="hljs-keyword">endef</span><br><br><span class="hljs-variable">$(<span class="hljs-built_in">eval</span> $(<span class="hljs-built_in">call</span> BuildPackage,shellinabox)</span>)<br></code></pre></td></tr></table></figure><h1 id="编译"><a href="#编译" class="headerlink" title="编译"></a>编译</h1><p>执行 <code>make menuconfig</code> ,按路径 <strong>net-&gt;Network-&gt;shellinabox</strong> 找到shellinabox, 然后按下空格键选中&lt;*&gt;shellinabox, 最后保存退出。</p><p>执行 <code>make package/shellinabox/compile V=s</code> </p><p>在我的环境编译报报错如下</p><p><img src="https://gitee.com/liuxc0116/img01/raw/master/20211026175554.png" alt="image-20211026175545356"></p><p>看报错应该是没有链接到openssl库, 在往上看日志发现编译的时候根本没有链接openssl库</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">OpenWrt-libtool: link: mipsel-openwrt-linux-musl-gcc -g -std=gnu99 -Wall -Os -pipe -mno-branch-likely -mips32r2 -mtune=24kc -fno-caller-saves -fno-plt -fhonour-copts -Wno-error=unused-but-set-variable -Wno-error=unused-result -msoft-float -mips16 -minterlink-mips16 -iremap/home/openwrt-19.07/build_dir/target-mipsel_24kc_musl/shellinabox-2.20:shellinabox-2.20 -Wformat -Werror=format-security -fstack-protector -D_FORTIFY_SOURCE=1 -Wl,-z -Wl,now -Wl,-z -Wl,relro -znow -zrelro -o shellinaboxd shellinabox/shellinaboxd.o shellinabox/externalfile.o shellinabox/launcher.o shellinabox/privileges.o shellinabox/service.o shellinabox/session.o shellinabox/usercss.o  -L/home/openwrt-19.07/staging_dir/target-mipsel_24kc_musl/usr/lib -L/home/openwrt-19.07/staging_dir/target-mipsel_24kc_musl/lib -L/home/openwrt-19.07/staging_dir/toolchain-mipsel_24kc_gcc-7.5.0_musl/usr/lib -L/home/openwrt-19.07/staging_dir/toolchain-mipsel_24kc_gcc-7.5.0_musl/lib ./.libs/liblogging.a ./.libs/libhttp.a -lz<br></code></pre></td></tr></table></figure><p>查看shellinabox的编译配置发现只能当runtime_loading值为no的时候才会显示链接 <code>-lssl -lcrypto</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs shell">if test &quot;x$enable_runtime_loading&quot; == xno; then<br>  dnl Link against OpenSSL libraries, unless SSL support has been disabled<br>  if test &quot;x$enable_ssl&quot; != xno; then<br>    AC_CHECK_HEADER(openssl/bio.h,<br>      [AC_CHECK_HEADER(openssl/err.h,<br>        [AC_CHECK_HEADER(openssl/ssl.h, [LIBS=&quot;-lssl -lcrypto $LIBS&quot;])])])<br>  fi<br><br>  dnl Link against PAM libraries, unless PAM support has been disabled<br>  if test &quot;x$enable_pam&quot; != xno; then<br>    AC_CHECK_HEADER(security/pam_appl.h, [LIBS=&quot;-lpam $LIBS&quot;])<br>    AC_CHECK_HEADER(security/pam_misc.h, [LIBS=&quot;-lpam_misc $LIBS&quot;])<br>  fi<br>fi<br></code></pre></td></tr></table></figure><p>接着查看runtime_loading的值, 默认runtime-loading的值是yes, </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs shell">dnl We try to always use dlopen() instead of linking libraries dynamically, as<br>dnl this reduces the hard run-time dependencies that our binary has. But we<br>dnl allow users to disable this feature.<br>AC_ARG_ENABLE(runtime-loading,<br>              [  --disable-runtime-loading ShellInABox will try to load the OpenSSL, and PAM<br>                            libraries at run-time, if it has been compiled with<br>                            support for these libraries, and if the operating<br>                            system supports dynamic loading of libraries. This<br>                            allows you to install the same binary on different<br>                            systems independent of whether they have OpenSSL<br>                            and PAM enabled.  If you would rather directly link<br>                            these libraries into the binary, thus making them a<br>                            hard dependency, then disable runtime-loading.])<br></code></pre></td></tr></table></figure><p>于是我们在Makefile里加上 <code>--disable-runtime-loading</code>  禁止掉runtime-loading</p><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs makefile">CONFIGURE_ARGS += --disable-utmp --disable-runtime-loading<br></code></pre></td></tr></table></figure><p>继续 <code>make package/shellinabox/compile V=s</code></p><p>然后又报错如下</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs swift"><span class="hljs-type">Package</span> shellinabox <span class="hljs-keyword">is</span> missing dependencies <span class="hljs-keyword">for</span> the following libraries:<br>libpam.so.<span class="hljs-number">0</span><br>libpam_misc.so.<span class="hljs-number">0</span><br><span class="hljs-type">Makefile</span>:<span class="hljs-number">45</span>: recipe <span class="hljs-keyword">for</span> target &#x27;<span class="hljs-regexp">/home/</span>openwrt<span class="hljs-operator">-</span><span class="hljs-number">19.07</span><span class="hljs-regexp">/bin/</span>targets<span class="hljs-regexp">/ramips/</span>mt7621<span class="hljs-regexp">/packages/</span>shellinabox_2.20_mipsel_24kc.ipk&#x27; failed<br>make[<span class="hljs-number">2</span>]: <span class="hljs-operator">***</span> [<span class="hljs-regexp">/home/</span>openwrt<span class="hljs-operator">-</span><span class="hljs-number">19.07</span><span class="hljs-regexp">/bin/</span>targets<span class="hljs-regexp">/ramips/</span>mt7621<span class="hljs-regexp">/packages/</span>shellinabox_2.20_mipsel_24kc.ipk] <span class="hljs-type">Error</span> <span class="hljs-number">1</span><br>make[<span class="hljs-number">2</span>]: <span class="hljs-type">Leaving</span> directory &#x27;<span class="hljs-regexp">/home/</span>openwrt<span class="hljs-operator">-</span><span class="hljs-number">19.07</span><span class="hljs-regexp">/feeds/</span>linker<span class="hljs-operator">/</span>shellinabox&#x27;<br>time: package<span class="hljs-regexp">/feeds/</span>linker<span class="hljs-regexp">/shellinabox/</span>compile#<span class="hljs-number">15.89</span>#<span class="hljs-number">1.39</span>#<span class="hljs-number">24.26</span><br>package<span class="hljs-regexp">/Makefile:111: recipe for target &#x27;package/</span>feeds<span class="hljs-regexp">/linker/</span>shellinabox<span class="hljs-operator">/</span>compile&#x27; failed<br>make[<span class="hljs-number">1</span>]: <span class="hljs-operator">***</span> [package<span class="hljs-regexp">/feeds/</span>linker<span class="hljs-regexp">/shellinabox/</span>compile] <span class="hljs-type">Error</span> <span class="hljs-number">2</span><br>make[<span class="hljs-number">1</span>]: <span class="hljs-type">Leaving</span> directory &#x27;<span class="hljs-regexp">/home/</span>openwrt<span class="hljs-operator">-</span><span class="hljs-number">19.07</span>&#x27;<br><span class="hljs-regexp">/home/</span>openwrt<span class="hljs-operator">-</span><span class="hljs-number">19.07</span><span class="hljs-regexp">/include/</span>toplevel.mk:<span class="hljs-number">225</span>: recipe <span class="hljs-keyword">for</span> target &#x27;package<span class="hljs-regexp">/feeds/</span>linker<span class="hljs-regexp">/shellinabox/</span>compile&#x27; failed<br>make: <span class="hljs-operator">***</span> [package<span class="hljs-regexp">/feeds/</span>linker<span class="hljs-regexp">/shellinabox/</span>compile] <span class="hljs-type">Error</span> <span class="hljs-number">2</span><br></code></pre></td></tr></table></figure><p>报错信息很清楚了，没有添加libpam的依赖。我们在Makefile中添加libpam依赖。如下：</p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs dts">define Package/shellinabox <br><span class="hljs-symbol">  SECTION:</span>=net<br><span class="hljs-symbol">  CATEGORY:</span>=Network<br><span class="hljs-symbol">  TITLE:</span>=a web based terminal emulator<br><span class="hljs-symbol">  URL:</span>=https:<span class="hljs-comment">//github.com/shellinabox/shellinabox</span><br><span class="hljs-symbol">  DEPENDS:</span>=+zlib +libopenssl +libpam +busybox +@BUSYBOX_CUSTOM +@BUSYBOX_CONFIG_LOGIN<br>endef<br></code></pre></td></tr></table></figure><p>继续编译 <code>make package/shellinabox/compile V=s</code></p><p>终于编译通过</p><p>完整的Makefile如下</p><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><code class="hljs makefile"><span class="hljs-keyword">include</span> <span class="hljs-variable">$(TOPDIR)</span>/rules.mk<br><br>PKG_NAME:=shellinabox<br>PKG_VERSION:=2.20<br>PKG_RELEASE:=<span class="hljs-variable">$(PKG_SOURCE_VERSION)</span><br><br>PKG_SOURCE_PROTO:=git<br>PKG_SOURCE_URL:=https://github.com/shellinabox/shellinabox.git<br>PKG_SOURCE_SUBDIR:=<span class="hljs-variable">$(PKG_NAME)</span>-<span class="hljs-variable">$(PKG_VERSION)</span><br>PKG_SOURCE_VERSION:=98e6eebc6c2026fb126a458c6cb5a2541447258e<br>PKG_SOURCE:=<span class="hljs-variable">$(PKG_NAME)</span>-<span class="hljs-variable">$(PKG_VERSION)</span>.tar.gz<br><br>PKG_FIXUP:=autoreconf<br><br><span class="hljs-keyword">include</span> <span class="hljs-variable">$(INCLUDE_DIR)</span>/package.mk<br><br><span class="hljs-keyword">define</span> Package/shellinabox <br>  SECTION:=net<br>  CATEGORY:=Network<br>  TITLE:=a web based terminal emulator<br>  URL:=https://github.com/shellinabox/shellinabox<br>  DEPENDS:=+zlib +libopenssl +libpam +busybox +@BUSYBOX_CUSTOM +@BUSYBOX_CONFIG_LOGIN<br><span class="hljs-keyword">endef</span><br><br><span class="hljs-keyword">define</span> Package/shellinabox/description<br>Shell In A Box implements a web server that <br>can <span class="hljs-keyword">export</span> arbitrary command line tools to <br>a web based terminal emulator. This emulator <br>is accessible to any JavaScript and CSS <br>enabled web browser and does not require any additional browser plugins.<br><span class="hljs-keyword">endef</span><br><br>CONFIGURE_ARGS += --disable-utmp --disable-runtime-loading<br><br><span class="hljs-keyword">define</span> Package/shellinabox/install<br><span class="hljs-variable">$(INSTALL_DIR)</span> $(1)/usr/sbin $(1)/etc/init.d $(1)/etc/shellinabox<br><span class="hljs-variable">$(INSTALL_BIN)</span> <span class="hljs-variable">$(PKG_BUILD_DIR)</span>/shellinaboxd $(1)/usr/sbin<br><span class="hljs-variable">$(INSTALL_BIN)</span> ./files/shellinaboxd.init $(1)/etc/init.d/shellinaboxd<br><span class="hljs-variable">$(INSTALL_DATA)</span> <span class="hljs-variable">$(PKG_BUILD_DIR)</span>/shellinabox/*.css $(1)/etc/shellinabox<br><span class="hljs-variable">$(PKG_BUILD_DIR)</span>/make-chained-cert.sh &gt; $(1)/etc/shellinabox/certificate.pem<br><span class="hljs-keyword">endef</span><br><br><span class="hljs-variable">$(<span class="hljs-built_in">eval</span> $(<span class="hljs-built_in">call</span> BuildPackage,shellinabox)</span>)<br></code></pre></td></tr></table></figure><h1 id="安装及测试"><a href="#安装及测试" class="headerlink" title="安装及测试"></a>安装及测试</h1><p>把生成的安装包移动到开发板上安装 &lt;bin&#x2F;targets&#x2F;ramips&#x2F;mt7621&#x2F;packages&#x2F;shellinabox_2.20_mipsel_24kc.ipk&gt;</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">opkg</span> install shellinabox_2.<span class="hljs-number">20</span>_mipsel_24kc.ipk<br></code></pre></td></tr></table></figure><p>然后测试</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">-u是指定用户的意思，默认是用nobody运行，在我的环境上使用nobody用户报错，所以我使用-u指定了root用户</span><br>shellinaboxd -u root<br></code></pre></td></tr></table></figure><p>在浏览器中访问 <a href="http://192.168.1.1:4200/">http://192.168.1.1:4200/</a> ，发现响应为空</p><p><a href="https://github.com/shellinabox/shellinabox/issues/416">google</a>了下发现需要访问 <a href="https://192.168.1.1:4200/">https://192.168.1.1:4200</a> 才行</p><p>如果你想继续使用http访问，可以执行下面的命令</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">-t 代表禁止ssl</span><br>shellinaboxd -t -u root<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>其他</category>
      
    </categories>
    
    
    <tags>
      
      <tag>mips</tag>
      
      <tag>openwrt</tag>
      
      <tag>shellinabox</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>CSS3新特性</title>
    <link href="/2021/10/25/CSS3/"/>
    <url>/2021/10/25/CSS3/</url>
    
    <content type="html"><![CDATA[<h1 id="CSS3学习"><a href="#CSS3学习" class="headerlink" title="CSS3学习"></a>CSS3学习</h1><h2 id="权重计算"><a href="#权重计算" class="headerlink" title="权重计算"></a>权重计算</h2><h3 id="css优先级规则"><a href="#css优先级规则" class="headerlink" title="css优先级规则"></a>css优先级规则</h3><ol><li><p>css选择规则的权值不同时，权值高的优先；</p></li><li><p>css选择规则的权值相同时，后定义的规则优先；</p></li><li><p>css属性后面加 !important 时，无条件绝对优先；</p></li></ol><p>!important &gt; 行间样式 &gt; id &gt; class | 属性 &gt; 标签选择器 &gt; 通配符</p><p><img src="https://gitee.com/liuxc0116/img01/raw/master/20210802111452.png" alt="img"></p><h3 id="权值等级划分"><a href="#权值等级划分" class="headerlink" title="权值等级划分"></a>权值等级划分</h3><p>一般来说是划分4个等级：</p><p>第一等级：代表 内联样式，如 style&#x3D;””，权值为 1,0,0,0；</p><p>第二等级：代表 ID选择器，如 #id&#x3D;””, 权值为 0,1,0,0；</p><p>第三等级：代表 calss | 伪类 | 属性 选择器，如 .class | :hover,:link,:target | [type], 权值 0,0,1,0；</p><p>第四等级：代表 标签 | 伪元素 选择器，如 p | ::after, ::before, ::fist-inline, ::selection, 权值 0,0,0,1；</p><p>此外，通用选择器（*），子选择器（&gt;）， 相邻同胞选择器（+）等选择器不在4等级之内，所以它们的权值都为 0,0,0,0；</p><h3 id="权值计算公式"><a href="#权值计算公式" class="headerlink" title="权值计算公式"></a>权值计算公式</h3><p>权值 &#x3D; 第一等级选择器*个数，第二等级选择器*个数，第三等级选择器*个数，第四等级选择器*个数；</p><h3 id="权值比较规则"><a href="#权值比较规则" class="headerlink" title="权值比较规则"></a>权值比较规则</h3><p>当两个权值进行比较的时候，是从高到低逐级将等级位上的权重值（如 权值 1,0,0,0 对应–&gt; 第一等级权重值，第二等级权重值，第三等级权重值，第四等级权重值）来进行比较的，而不是简单的 1000<em>个数 + 100</em>个数 + 10<em>个数 + 1</em>个数 的总和来进行比较的，换句话说，<strong>低等级的选择器，个数再多也不会越等级超过高等级的选择器的优先级的</strong>;【为什么这么特别强调呢，因为为在网上查资料的时候，看到好多博客是把这个权重值理解成了所有等级的数字之和了】<strong>，</strong>说到这里 再 配合下图 大家应该就差不多理解了。</p><p><strong>总结，这个比较规则就是三点</strong></p><p><strong>1.先从高等级进行比较，高等级相同时，再比较低等级的，以此类推；</strong></p><p><strong>2.完全相同的话，就采用 后者优先原则（也就是样式覆盖）；</strong></p><p><strong>3.css属性后面加 !important 时，无条件绝对优先（比内联样式还要优先）；</strong></p><h2 id="新增选择器"><a href="#新增选择器" class="headerlink" title="新增选择器"></a>新增选择器</h2><h3 id="属性选择器"><a href="#属性选择器" class="headerlink" title="属性选择器"></a>属性选择器</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">style</span>&gt;</span><span class="language-css"></span><br><span class="language-css">        <span class="hljs-selector-tag">button</span> &#123;</span><br><span class="language-css">            <span class="hljs-attribute">cursor</span>: pointer;</span><br><span class="language-css">        &#125;</span><br><span class="language-css">        <span class="hljs-comment">/* 类选择器、属性选择器、伪类选择器 权重是10*/</span></span><br><span class="language-css">        <span class="hljs-selector-tag">button</span><span class="hljs-selector-attr">[disabled]</span> &#123;</span><br><span class="language-css">            <span class="hljs-attribute">cursor</span>: default;</span><br><span class="language-css">        &#125;</span><br><span class="language-css">        <span class="hljs-comment">/* </span></span><br><span class="hljs-comment"><span class="language-css">        ele[attr]</span></span><br><span class="hljs-comment"><span class="language-css">        ele[attr=&#x27;val&#x27;]</span></span><br><span class="hljs-comment"><span class="language-css">        ele[attr^=&#x27;val&#x27;] 以val开头</span></span><br><span class="hljs-comment"><span class="language-css">        ele[attr$=&#x27;val&#x27;] 以val结尾</span></span><br><span class="hljs-comment"><span class="language-css">        ele[attr*=&#x27;val&#x27;] 包含val</span></span><br><span class="hljs-comment"><span class="language-css">        */</span></span><br><span class="language-css"></span><br><span class="language-css">    </span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">button</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">button</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">disabled</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br></code></pre></td></tr></table></figure><h3 id="结构伪类选择器"><a href="#结构伪类选择器" class="headerlink" title="结构伪类选择器"></a>结构伪类选择器</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">style</span>&gt;</span><span class="language-css"></span><br><span class="language-css">        <span class="hljs-comment">/* 类选择器、属性选择器、伪类选择器 权重是10*/</span></span><br><span class="language-css">        <span class="hljs-selector-tag">ul</span> <span class="hljs-selector-tag">li</span><span class="hljs-selector-pseudo">:first</span>-child &#123;</span><br><span class="language-css">            <span class="hljs-attribute">color</span>: red;</span><br><span class="language-css">        &#125;</span><br><span class="language-css">        <span class="hljs-comment">/* </span></span><br><span class="hljs-comment"><span class="language-css">        ele:first-child</span></span><br><span class="hljs-comment"><span class="language-css">        ele:last-child</span></span><br><span class="hljs-comment"><span class="language-css">        ele:nth-child(n) //n 可以是even代表偶数 odd代表奇数，n也可以是公式，此时n从0开始 3n 5n n+10, -n+5等等</span></span><br><span class="hljs-comment"><span class="language-css">        ele:first-of-type 指定类型的第一个</span></span><br><span class="hljs-comment"><span class="language-css">        ele:last-of-type</span></span><br><span class="hljs-comment"><span class="language-css">        ele:nth-of-type(n)</span></span><br><span class="hljs-comment"><span class="language-css">        */</span></span><br><span class="language-css">        <span class="hljs-selector-tag">div</span> <span class="hljs-selector-tag">span</span><span class="hljs-selector-pseudo">:nth-of-type</span>(<span class="hljs-number">3</span>) &#123;</span><br><span class="language-css">            <span class="hljs-attribute">color</span>: green</span><br><span class="language-css">        &#125;</span><br><span class="language-css">    </span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">ul</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>1<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>2<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>3<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>4<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>5<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">ul</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>p<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">span</span>&gt;</span>1<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">span</span>&gt;</span>3<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">span</span>&gt;</span>3<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br></code></pre></td></tr></table></figure><blockquote><p>nth-child(n)  选择父元素里面的第n个孩子，不分孩子的类型， 可以使用nth-of-type(n)实现</p></blockquote><h3 id="伪元素选择器"><a href="#伪元素选择器" class="headerlink" title="伪元素选择器"></a>伪元素选择器</h3><p>-图标的使用</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">style</span>&gt;</span><span class="language-css"></span><br><span class="language-css">        <span class="hljs-selector-tag">div</span> &#123;</span><br><span class="language-css">            <span class="hljs-attribute">width</span>: <span class="hljs-number">100px</span>;</span><br><span class="language-css">            <span class="hljs-attribute">height</span>: <span class="hljs-number">100px</span>;</span><br><span class="language-css">            <span class="hljs-attribute">border</span>: <span class="hljs-number">1px</span> solid red;</span><br><span class="language-css">        &#125;</span><br><span class="language-css">        <span class="hljs-comment">/*</span></span><br><span class="hljs-comment"><span class="language-css">        比重是1，本身是个盒子，可以设置样式，默认行内</span></span><br><span class="hljs-comment"><span class="language-css">        before 在元素内容前插入内容，</span></span><br><span class="hljs-comment"><span class="language-css">        after 在元素内容后面插入内容</span></span><br><span class="hljs-comment"><span class="language-css">        */</span></span><br><span class="language-css"></span><br><span class="language-css">        <span class="hljs-selector-tag">div</span><span class="hljs-selector-pseudo">::before</span> &#123;</span><br><span class="language-css">            <span class="hljs-attribute">content</span>: <span class="hljs-string">&quot;你&quot;</span>;</span><br><span class="language-css">            <span class="hljs-attribute">display</span>: inline-block;</span><br><span class="language-css">            <span class="hljs-attribute">width</span>: <span class="hljs-number">20px</span>;</span><br><span class="language-css">            <span class="hljs-attribute">height</span>: <span class="hljs-number">10px</span>;</span><br><span class="language-css">        &#125;</span><br><span class="language-css"></span><br><span class="language-css">    </span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>Love<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br></code></pre></td></tr></table></figure><h2 id="2D转换"><a href="#2D转换" class="headerlink" title="2D转换"></a>2D转换</h2><blockquote><p>Transform 对 x,y轴进行操作</p></blockquote><h3 id="位移-translate"><a href="#位移-translate" class="headerlink" title="位移 translate"></a>位移 translate</h3><blockquote><p>translate(x,y), translateX(x), translateY(y)</p></blockquote><p>类似于定位</p><ul><li>优点不会影响其他盒子的位置</li><li>对行内标签没有效果</li><li>值可以是百分比，相对于自身的百分比</li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs css">&lt;<span class="hljs-selector-tag">body</span>&gt;<br>    &lt;style&gt;<br>        <span class="hljs-selector-tag">div</span> &#123;<br>            <span class="hljs-attribute">width</span>: <span class="hljs-number">100px</span>;<br>            <span class="hljs-attribute">height</span>: <span class="hljs-number">100px</span>;<br>            <span class="hljs-attribute">border</span>: <span class="hljs-number">1px</span> solid red;<br>            <span class="hljs-attribute">transform</span>: <span class="hljs-built_in">translate</span>(<span class="hljs-number">100px</span>,<span class="hljs-number">100px</span>);<br>        &#125;<br><br>    &lt;/style&gt;<br>    &lt;<span class="hljs-selector-tag">div</span>&gt;Love&lt;/<span class="hljs-selector-tag">div</span>&gt;<br>&lt;/<span class="hljs-selector-tag">body</span>&gt;<br></code></pre></td></tr></table></figure><p>用处： </p><ul><li><p>可以结合动画做鼠标经过的效果</p></li><li><p>盒子的水平和垂直居中 transform: translate(-50%,-50%);</p></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">style</span>&gt;</span><span class="language-css"></span><br><span class="language-css">        <span class="hljs-selector-tag">div</span> &#123;</span><br><span class="language-css">            <span class="hljs-attribute">position</span>: relative;</span><br><span class="language-css">            <span class="hljs-attribute">width</span>: <span class="hljs-number">400px</span>;</span><br><span class="language-css">            <span class="hljs-attribute">height</span>: <span class="hljs-number">400px</span>;</span><br><span class="language-css">            <span class="hljs-attribute">border</span>: <span class="hljs-number">1px</span> solid red;</span><br><span class="language-css">            <span class="hljs-comment">/* transform: translate(100px,100px); */</span></span><br><span class="language-css">        &#125;</span><br><span class="language-css"></span><br><span class="language-css">        <span class="hljs-selector-tag">p</span> &#123;</span><br><span class="language-css">            <span class="hljs-attribute">position</span>: absolute;</span><br><span class="language-css">            <span class="hljs-attribute">top</span>: <span class="hljs-number">50%</span>;</span><br><span class="language-css">            <span class="hljs-attribute">left</span>: <span class="hljs-number">50%</span>;</span><br><span class="language-css">            <span class="hljs-attribute">transform</span>: <span class="hljs-built_in">translate</span>(-<span class="hljs-number">50%</span>, -<span class="hljs-number">50%</span>);</span><br><span class="language-css">            <span class="hljs-comment">/*以上设置可以是元素相对于父元素垂直居中*/</span></span><br><span class="language-css">            <span class="hljs-attribute">width</span>: <span class="hljs-number">100px</span>;</span><br><span class="language-css">            <span class="hljs-attribute">height</span>: <span class="hljs-number">100px</span>;</span><br><span class="language-css">            <span class="hljs-attribute">background-color</span>: green;</span><br><span class="language-css">        &#125;</span><br><span class="language-css"></span><br><span class="language-css">    </span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br></code></pre></td></tr></table></figure><h3 id="旋转-rotate"><a href="#旋转-rotate" class="headerlink" title="旋转 rotate"></a>旋转 rotate</h3><blockquote><p>transform: rotate(45deg)</p></blockquote><p><img src="https://gitee.com/liuxc0116/img01/raw/master/20210802111502.png" alt="image-20200811184943883"></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">style</span>&gt;</span><span class="language-css"></span><br><span class="language-css">        <span class="hljs-selector-tag">div</span> &#123;</span><br><span class="language-css">            <span class="hljs-attribute">position</span>: relative;</span><br><span class="language-css">            <span class="hljs-attribute">width</span>: <span class="hljs-number">249px</span>;</span><br><span class="language-css">            <span class="hljs-attribute">height</span>: <span class="hljs-number">35px</span>;</span><br><span class="language-css">            <span class="hljs-attribute">border</span>: <span class="hljs-number">1px</span> solid red;</span><br><span class="language-css">            <span class="hljs-comment">/* transform: translate(100px,100px); */</span></span><br><span class="language-css">        &#125;</span><br><span class="language-css"></span><br><span class="language-css">        <span class="hljs-selector-tag">div</span><span class="hljs-selector-pseudo">::after</span> &#123;</span><br><span class="language-css">            <span class="hljs-attribute">content</span>: <span class="hljs-string">&quot;&quot;</span>;</span><br><span class="language-css">            <span class="hljs-attribute">position</span>: absolute;</span><br><span class="language-css">            <span class="hljs-attribute">top</span>: <span class="hljs-number">8px</span>;</span><br><span class="language-css">            <span class="hljs-attribute">right</span>: <span class="hljs-number">15px</span>;</span><br><span class="language-css">            <span class="hljs-attribute">width</span>: <span class="hljs-number">10px</span>;</span><br><span class="language-css">            <span class="hljs-attribute">height</span>: <span class="hljs-number">10px</span>;</span><br><span class="language-css">            <span class="hljs-attribute">border-right</span>: <span class="hljs-number">1px</span> solid <span class="hljs-number">#000</span>;</span><br><span class="language-css">            <span class="hljs-attribute">border-bottom</span>: <span class="hljs-number">1px</span> solid <span class="hljs-number">#000</span>;</span><br><span class="language-css">            <span class="hljs-attribute">transform</span>: <span class="hljs-built_in">rotate</span>(<span class="hljs-number">45deg</span>);</span><br><span class="language-css">            <span class="hljs-attribute">transition</span>: all <span class="hljs-number">0.3s</span>;</span><br><span class="language-css">        &#125;</span><br><span class="language-css"></span><br><span class="language-css">        <span class="hljs-selector-tag">div</span><span class="hljs-selector-pseudo">:hover</span><span class="hljs-selector-pseudo">::after</span> &#123;</span><br><span class="language-css">            <span class="hljs-attribute">transform</span>: <span class="hljs-built_in">rotate</span>(<span class="hljs-number">225deg</span>);</span><br><span class="language-css">        &#125;</span><br><span class="language-css">    </span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br></code></pre></td></tr></table></figure><h3 id="转换中心点设置transform-origin"><a href="#转换中心点设置transform-origin" class="headerlink" title="转换中心点设置transform-origin"></a>转换中心点设置transform-origin</h3><blockquote><p>transform-origin: x y;  &#x2F;&#x2F;可以是具体数字，百分比，方位名词left&#x2F;right&#x2F;top&#x2F;bottom</p></blockquote><p>用处：可以结合rotate设置遮罩层</p><h3 id="缩放scale"><a href="#缩放scale" class="headerlink" title="缩放scale"></a>缩放scale</h3><blockquote><p>scale(x,y)；scale(n)&#x2F;&#x2F;是数字，是原来大小的倍数</p></blockquote><p>优势：不会影响其他盒子的位子，可以设置中心点</p><h3 id="组合"><a href="#组合" class="headerlink" title="组合"></a>组合</h3><blockquote><p>transform:translate() rotate() scale()</p></blockquote><ul><li>顺序会影响转换的效果</li><li>组合动画有位移的时候，位移要放在最前面</li></ul><h2 id="动画"><a href="#动画" class="headerlink" title="动画"></a>动画</h2><h3 id="属性"><a href="#属性" class="headerlink" title="属性"></a>属性</h3><ul><li>@keyframes &#x2F;&#x2F;定义动画</li><li>animation</li><li>anination-name &#x2F;&#x2F; 必须</li><li>animation-duration &#x2F;&#x2F; 必须</li><li>animation-timing-function<ul><li>linear 匀速</li><li>ease 先慢中快后慢</li><li>ease-in 以低速开始</li><li>ease-out 以低速结束</li><li>ease-in-out 低速开始和结束</li><li>steps() 分步长来分阶段来完成动画， 比如打字机效果</li></ul></li><li>animation-delay</li><li>animation-iteration-count  &#x2F;&#x2F;infinite 无限循环</li><li>animation-direction &#x2F;&#x2F;是否反方向运动</li><li>animation-fill-mode &#x2F;&#x2F; 默认backwards，回到其实状态，停留在结束状态forwards</li><li>animation-play-state &#x2F;&#x2F;播放状态  是否暂停动画<ul><li>paused</li><li>running</li></ul></li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><code class="hljs css">&lt;style&gt;<br><span class="hljs-comment">/*定义动画*/</span><br><span class="hljs-keyword">@keyframes</span> name &#123;<br>    <span class="hljs-number">0%</span> &#123;<br>        <span class="hljs-comment">/*样式*/</span><br>    &#125;<br>    <span class="hljs-number">100%</span> &#123;<br>        <span class="hljs-comment">/*样式*/</span><br>    &#125;<br>&#125;<br><span class="hljs-keyword">@keyframes</span> name &#123;<br>    <span class="hljs-selector-tag">from</span> &#123;<br>        <span class="hljs-comment">/*样式*/</span><br>    &#125;<br>    <span class="hljs-selector-tag">to</span> &#123;<br>        <span class="hljs-comment">/*样式*/</span><br>    &#125;<br>&#125;<br><span class="hljs-comment">/*</span><br><span class="hljs-comment">0%和100%叫做动画序列，0%是动画开始，100%是动画结束, 中间可以自定义动画序列</span><br><span class="hljs-comment">from..to从0到100</span><br><span class="hljs-comment">animation: name duration timing-function delay iteration-count direction fill-mode</span><br><span class="hljs-comment">*/</span><br><span class="hljs-comment">/*调用动画*/</span><br><br><span class="hljs-selector-tag">div</span> &#123;<br>    <span class="hljs-attribute">animation-name</span>: name;<br>    <span class="hljs-attribute">animation-duration</span>: <span class="hljs-number">2s</span>;<br>&#125;<br>&lt;/style&gt;<br></code></pre></td></tr></table></figure><h3 id="案例"><a href="#案例" class="headerlink" title="案例"></a>案例</h3><h4 id="打字机效果"><a href="#打字机效果" class="headerlink" title="打字机效果"></a>打字机效果</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">style</span>&gt;</span><span class="language-css"></span><br><span class="language-css">        <span class="hljs-selector-tag">div</span> &#123;</span><br><span class="language-css">            <span class="hljs-attribute">overflow</span>: hidden;</span><br><span class="language-css">            <span class="hljs-attribute">white-space</span>: nowrap;</span><br><span class="language-css">            <span class="hljs-attribute">font-size</span>: <span class="hljs-number">20px</span>;</span><br><span class="language-css">            <span class="hljs-attribute">width</span>: <span class="hljs-number">0px</span>;</span><br><span class="language-css">            <span class="hljs-attribute">height</span>: <span class="hljs-number">30px</span>;</span><br><span class="language-css">            <span class="hljs-attribute">animation</span>: w <span class="hljs-number">2s</span> <span class="hljs-built_in">steps</span>(<span class="hljs-number">6</span>) forwards;</span><br><span class="language-css">        &#125;</span><br><span class="language-css">        <span class="hljs-keyword">@keyframes</span> w &#123;</span><br><span class="language-css">            <span class="hljs-number">0%</span> &#123;</span><br><span class="language-css">                <span class="hljs-attribute">width</span>: <span class="hljs-number">0</span>;</span><br><span class="language-css">            &#125;</span><br><span class="language-css">            <span class="hljs-number">100%</span> &#123;</span><br><span class="language-css">                <span class="hljs-attribute">width</span>: <span class="hljs-number">120px</span>;</span><br><span class="language-css">            &#125;</span><br><span class="language-css">        &#125;</span><br><span class="language-css">    </span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span><br>        你好，明天。<br>    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br></code></pre></td></tr></table></figure><h4 id="奔跑的小熊"><a href="#奔跑的小熊" class="headerlink" title="奔跑的小熊"></a>奔跑的小熊</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">style</span>&gt;</span><span class="language-css"></span><br><span class="language-css">        <span class="hljs-selector-tag">div</span> &#123;</span><br><span class="language-css">            <span class="hljs-attribute">position</span>: absolute;</span><br><span class="language-css">            <span class="hljs-attribute">overflow</span>: hidden;</span><br><span class="language-css">            <span class="hljs-attribute">font-size</span>: <span class="hljs-number">20px</span>;</span><br><span class="language-css">            <span class="hljs-attribute">width</span>: <span class="hljs-number">30px</span>;</span><br><span class="language-css">            <span class="hljs-attribute">height</span>: <span class="hljs-number">30px</span>;</span><br><span class="language-css">            <span class="hljs-attribute">background</span>: <span class="hljs-built_in">url</span>(<span class="hljs-string">imgs/bear.png</span>) no-repeat;</span><br><span class="language-css">            <span class="hljs-comment">/* 给一个元素添加多个动画 */</span></span><br><span class="language-css">            <span class="hljs-attribute">animation</span>: bear <span class="hljs-number">2s</span> <span class="hljs-built_in">steps</span>(<span class="hljs-number">8</span>) forwards, move <span class="hljs-number">3s</span>;</span><br><span class="language-css">        &#125;</span><br><span class="language-css">        <span class="hljs-keyword">@keyframes</span> bear &#123;</span><br><span class="language-css">            <span class="hljs-number">0%</span> &#123;</span><br><span class="language-css">                <span class="hljs-attribute">background-position</span>: <span class="hljs-number">0</span> <span class="hljs-number">0</span>;</span><br><span class="language-css">            &#125;</span><br><span class="language-css">            <span class="hljs-number">100%</span> &#123;</span><br><span class="language-css">                <span class="hljs-attribute">background-position</span>: -<span class="hljs-number">1600px</span> <span class="hljs-number">0</span>;</span><br><span class="language-css">            &#125;</span><br><span class="language-css">        &#125;</span><br><span class="language-css"></span><br><span class="language-css">        <span class="hljs-keyword">@keyframes</span> move &#123;</span><br><span class="language-css">            <span class="hljs-number">0%</span> &#123;</span><br><span class="language-css">                <span class="hljs-attribute">left</span>: <span class="hljs-number">0</span>;</span><br><span class="language-css">            &#125;</span><br><span class="language-css">            <span class="hljs-number">100%</span> &#123;</span><br><span class="language-css">                <span class="hljs-attribute">left</span>: <span class="hljs-number">50%</span>;</span><br><span class="language-css">                <span class="hljs-attribute">transform</span>: <span class="hljs-built_in">translateX</span>(-<span class="hljs-number">50%</span>);</span><br><span class="language-css">            &#125;</span><br><span class="language-css">        &#125;</span><br><span class="language-css">    </span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br></code></pre></td></tr></table></figure><h2 id="3D转换"><a href="#3D转换" class="headerlink" title="3D转换"></a>3D转换</h2><h3 id="3D位移"><a href="#3D位移" class="headerlink" title="3D位移"></a>3D位移</h3><blockquote><p>translate3d(x,y,z) translateX(n)  translateX(n)  translateX(10px)</p></blockquote><h3 id="3D旋转"><a href="#3D旋转" class="headerlink" title="3D旋转"></a>3D旋转</h3><blockquote><p>rotate3d(x,y,x,deg)</p></blockquote><h3 id="透视"><a href="#透视" class="headerlink" title="透视"></a>透视</h3><blockquote><p>perspective  子box做3D动画，给父元素加透视</p></blockquote><h3 id="3D呈现"><a href="#3D呈现" class="headerlink" title="3D呈现"></a>3D呈现</h3><blockquote><p>transform-style 当父BOX做3D动画的时候，保持子BOX的3D效果</p></blockquote><h3 id="案例："><a href="#案例：" class="headerlink" title="案例："></a>案例：</h3><h4 id="旋转木马"><a href="#旋转木马" class="headerlink" title="旋转木马"></a>旋转木马</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">style</span>&gt;</span><span class="language-css"></span><br><span class="language-css">        <span class="hljs-selector-tag">body</span> &#123;</span><br><span class="language-css">            <span class="hljs-attribute">perspective</span>: <span class="hljs-number">1200px</span>;</span><br><span class="language-css">        &#125;</span><br><span class="language-css">        <span class="hljs-selector-tag">section</span> &#123;</span><br><span class="language-css">            <span class="hljs-attribute">position</span>: relative;</span><br><span class="language-css">            <span class="hljs-attribute">width</span>: <span class="hljs-number">200px</span>;</span><br><span class="language-css">            <span class="hljs-attribute">height</span>: <span class="hljs-number">257px</span>;</span><br><span class="language-css">            <span class="hljs-attribute">margin</span>: <span class="hljs-number">200px</span> auto;</span><br><span class="language-css">            <span class="hljs-attribute">transform-style</span>: preserve-<span class="hljs-number">3</span>d;</span><br><span class="language-css">            <span class="hljs-attribute">animation</span>: rotate <span class="hljs-number">10s</span> linear infinite;</span><br><span class="language-css">        &#125;</span><br><span class="language-css"></span><br><span class="language-css">        <span class="hljs-selector-tag">section</span><span class="hljs-selector-pseudo">:hover</span> &#123;</span><br><span class="language-css">            <span class="hljs-attribute">animation-play-state</span>: paused;</span><br><span class="language-css">        &#125;</span><br><span class="language-css"></span><br><span class="language-css">        <span class="hljs-selector-tag">section</span> <span class="hljs-selector-tag">div</span> &#123;</span><br><span class="language-css">            <span class="hljs-attribute">position</span>: absolute;</span><br><span class="language-css">            <span class="hljs-attribute">top</span>: <span class="hljs-number">0</span>;</span><br><span class="language-css">            <span class="hljs-attribute">left</span>: <span class="hljs-number">0</span>;</span><br><span class="language-css">            <span class="hljs-attribute">width</span>: <span class="hljs-number">100%</span>;</span><br><span class="language-css">            <span class="hljs-attribute">height</span>: <span class="hljs-number">100%</span>;</span><br><span class="language-css">            <span class="hljs-attribute">background</span>: <span class="hljs-built_in">url</span>(<span class="hljs-string">123.png</span>) no-repeat;</span><br><span class="language-css">        &#125;</span><br><span class="language-css"></span><br><span class="language-css">        <span class="hljs-keyword">@keyframes</span> rotate &#123;</span><br><span class="language-css">            <span class="hljs-number">0%</span> &#123;</span><br><span class="language-css">                <span class="hljs-attribute">transform</span>: <span class="hljs-built_in">rotateY</span>(<span class="hljs-number">0</span>);</span><br><span class="language-css">            &#125;</span><br><span class="language-css"></span><br><span class="language-css">            <span class="hljs-number">100%</span> &#123;</span><br><span class="language-css">                <span class="hljs-attribute">transform</span>: <span class="hljs-built_in">rotateY</span>(<span class="hljs-number">360deg</span>);</span><br><span class="language-css">            &#125;</span><br><span class="language-css">        &#125;</span><br><span class="language-css"></span><br><span class="language-css">        <span class="hljs-selector-tag">section</span> <span class="hljs-selector-tag">div</span><span class="hljs-selector-pseudo">:nth-child</span>(<span class="hljs-number">1</span>) &#123;</span><br><span class="language-css">            <span class="hljs-attribute">transform</span>: <span class="hljs-built_in">rotateY</span>(<span class="hljs-number">0deg</span>) <span class="hljs-built_in">translateZ</span>(<span class="hljs-number">300px</span>);</span><br><span class="language-css">        &#125;</span><br><span class="language-css"></span><br><span class="language-css">        <span class="hljs-selector-tag">section</span> <span class="hljs-selector-tag">div</span><span class="hljs-selector-pseudo">:nth-child</span>(<span class="hljs-number">2</span>) &#123;</span><br><span class="language-css">            <span class="hljs-attribute">transform</span>: <span class="hljs-built_in">rotateY</span>(<span class="hljs-number">60deg</span>) <span class="hljs-built_in">translateZ</span>(<span class="hljs-number">300px</span>);</span><br><span class="language-css">        &#125;</span><br><span class="language-css"></span><br><span class="language-css">        <span class="hljs-selector-tag">section</span> <span class="hljs-selector-tag">div</span><span class="hljs-selector-pseudo">:nth-child</span>(<span class="hljs-number">3</span>) &#123;</span><br><span class="language-css">            <span class="hljs-attribute">transform</span>: <span class="hljs-built_in">rotateY</span>(<span class="hljs-number">120deg</span>) <span class="hljs-built_in">translateZ</span>(<span class="hljs-number">300px</span>);</span><br><span class="language-css">        &#125;</span><br><span class="language-css"></span><br><span class="language-css">        <span class="hljs-selector-tag">section</span> <span class="hljs-selector-tag">div</span><span class="hljs-selector-pseudo">:nth-child</span>(<span class="hljs-number">4</span>) &#123;</span><br><span class="language-css">            <span class="hljs-attribute">transform</span>: <span class="hljs-built_in">rotateY</span>(<span class="hljs-number">180deg</span>) <span class="hljs-built_in">translateZ</span>(<span class="hljs-number">400px</span>);</span><br><span class="language-css">        &#125;</span><br><span class="language-css"></span><br><span class="language-css">        <span class="hljs-selector-tag">section</span> <span class="hljs-selector-tag">div</span><span class="hljs-selector-pseudo">:nth-child</span>(<span class="hljs-number">5</span>) &#123;</span><br><span class="language-css">            <span class="hljs-attribute">transform</span>: <span class="hljs-built_in">rotateY</span>(<span class="hljs-number">240deg</span>) <span class="hljs-built_in">translateZ</span>(<span class="hljs-number">300px</span>);</span><br><span class="language-css">        &#125;</span><br><span class="language-css">        <span class="hljs-selector-tag">section</span> <span class="hljs-selector-tag">div</span><span class="hljs-selector-pseudo">:nth-child</span>(<span class="hljs-number">6</span>) &#123;</span><br><span class="language-css">            <span class="hljs-attribute">transform</span>: <span class="hljs-built_in">rotateY</span>(<span class="hljs-number">300deg</span>) <span class="hljs-built_in">translateZ</span>(<span class="hljs-number">300px</span>);</span><br><span class="language-css">        &#125;</span><br><span class="language-css">    </span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">section</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">section</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br></code></pre></td></tr></table></figure><h2 id="浏览器私有前缀"><a href="#浏览器私有前缀" class="headerlink" title="浏览器私有前缀"></a>浏览器私有前缀</h2><h3 id="私有前缀"><a href="#私有前缀" class="headerlink" title="私有前缀"></a>私有前缀</h3><ul><li>-moz-firefox</li><li>-ms-   ie</li><li>-webkit safari chrome</li><li>-o- opera</li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs css">&lt;style&gt;<br>-moz-<span class="hljs-attribute">border-radius</span>: <span class="hljs-number">10px</span>;<br>-webkit-<span class="hljs-attribute">border-radius</span>: <span class="hljs-number">10px</span>;<br>-o-<span class="hljs-attribute">border-radius</span>: <span class="hljs-number">10px</span>;<br><span class="hljs-attribute">border-radius</span>: <span class="hljs-number">10px</span>;<br>&lt;/style&gt;<br></code></pre></td></tr></table></figure><h2 id="动画过渡"><a href="#动画过渡" class="headerlink" title="动画过渡"></a>动画过渡</h2><blockquote><p>transition: all .3s;</p></blockquote><h2 id="技巧"><a href="#技巧" class="headerlink" title="技巧"></a>技巧</h2><h3 id="文字居中对齐"><a href="#文字居中对齐" class="headerlink" title="文字居中对齐"></a>文字居中对齐</h3><blockquote><p>m {text-align: center; line-height: $width}}</p></blockquote><h3 id="图片居中"><a href="#图片居中" class="headerlink" title="图片居中"></a>图片居中</h3><blockquote><p>img {vertical-align: middle;} (图片默认和文字的基线对齐)</p></blockquote>]]></content>
    
    
    <categories>
      
      <category>网页前端</category>
      
      <category>css3</category>
      
    </categories>
    
    
    <tags>
      
      <tag>css3</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>git代码回滚</title>
    <link href="/2021/10/23/git%E4%BB%A3%E7%A0%81%E5%9B%9E%E6%BB%9A/"/>
    <url>/2021/10/23/git%E4%BB%A3%E7%A0%81%E5%9B%9E%E6%BB%9A/</url>
    
    <content type="html"><![CDATA[<h1 id="1-未使用git-add-缓存代码"><a href="#1-未使用git-add-缓存代码" class="headerlink" title="1. 未使用git add 缓存代码"></a>1. 未使用git add 缓存代码</h1><ul><li>使用git checkout – filename，注意中间有–</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs undefined">git checkout -- filename<br></code></pre></td></tr></table></figure><ul><li>放弃所有文件修改 git checkout .</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs undefined">git checkout .<br></code></pre></td></tr></table></figure><ul><li>此命令用来放弃掉所有还没有加入到缓存区（就是 git add 命令）的修改：<strong>内容修改与整个文件删除</strong></li><li><strong>此命令不会删除新建的文件，因为新建的文件还没加入git管理系统中，所以对git来说是未知，只需手动删除即可</strong></li></ul><h1 id="2-已使用git-add-缓存代码，未使用git-commit"><a href="#2-已使用git-add-缓存代码，未使用git-commit" class="headerlink" title="2. 已使用git add 缓存代码，未使用git commit"></a>2. 已使用git add 缓存代码，未使用git commit</h1><ul><li>使用 git reset HEAD filename</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs undefined">git reset HEAD filename<br></code></pre></td></tr></table></figure><ul><li>放弃所有文件修改 git reset HEAD</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs undefined">git reset HEAD<br></code></pre></td></tr></table></figure><ul><li>此命令用来清除 git  对于文件修改的缓存。相当于撤销 git add 命令所在的工作。<strong>在使用本命令后，本地的修改并不会消失，而是回到了第一步1. 未使用git add 缓存代码，继续使用用git checkout – filename，就可以放弃本地修改</strong></li></ul><h1 id="3-已经用-git-commit-提交了代码"><a href="#3-已经用-git-commit-提交了代码" class="headerlink" title="3. 已经用 git commit  提交了代码"></a>3. 已经用 git commit  提交了代码</h1><ul><li>使用 git reset –hard HEAD^ 来回退到上一次commit的状态</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs undefined">git reset --hard HEAD^<br></code></pre></td></tr></table></figure><ul><li>或者回退到任意版本git reset –hard  commit id ，使用git log命令查看git提交历史和commit id</li></ul><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs objectivec">git reset --hard commit <span class="hljs-type">id</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>git</category>
      
    </categories>
    
    
    <tags>
      
      <tag>git</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>ubuntu下搭建邮件收发服务器</title>
    <link href="/2021/10/21/%E6%90%AD%E5%BB%BA%E9%82%AE%E4%BB%B6%E6%94%B6%E5%8F%91%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    <url>/2021/10/21/%E6%90%AD%E5%BB%BA%E9%82%AE%E4%BB%B6%E6%94%B6%E5%8F%91%E6%9C%8D%E5%8A%A1%E5%99%A8/</url>
    
    <content type="html"><![CDATA[<h1 id="搭建邮件收发服务器"><a href="#搭建邮件收发服务器" class="headerlink" title="搭建邮件收发服务器"></a>搭建邮件收发服务器</h1><h2 id="搭建发邮件服务器"><a href="#搭建发邮件服务器" class="headerlink" title="搭建发邮件服务器"></a>搭建发邮件服务器</h2><h3 id="安装postfix"><a href="#安装postfix" class="headerlink" title="安装postfix"></a>安装postfix</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">apt-get install postfix<br></code></pre></td></tr></table></figure><h3 id="修改postfix配置文件"><a href="#修改postfix配置文件" class="headerlink" title="修改postfix配置文件"></a>修改postfix配置文件</h3><p>vim &#x2F;etc&#x2F;postfix&#x2F;main.cf</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 修改服务器域名</span><br>mydomain = example.com<br><br><span class="hljs-comment"># 对所有IP地址提供服务</span><br>inet_interfaces = all<br><br><span class="hljs-comment"># 提供服务类型，这里只讨论邮件发送</span><br>mydestination = <span class="hljs-variable">$myhostname</span>, localhost.<span class="hljs-variable">$mydomain</span>, localhost, <span class="hljs-variable">$mydomain</span>,mail.<span class="hljs-variable">$mydomain</span><br></code></pre></td></tr></table></figure><h3 id="重启postfix"><a href="#重启postfix" class="headerlink" title="重启postfix"></a>重启postfix</h3><figure class="highlight maxima"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs maxima">systemctl enable <span class="hljs-built_in">postfix</span><br>systemctl <span class="hljs-built_in">restart</span> <span class="hljs-built_in">postfix</span><br></code></pre></td></tr></table></figure><h3 id="本地测试修改域名解析"><a href="#本地测试修改域名解析" class="headerlink" title="本地测试修改域名解析"></a>本地测试修改域名解析</h3><p><strong>修改DNS服务器，因为我们发送邮件需要域名服务，如何配置DNS服务器请查看本人博客,DNS服务器中记录example.com一定要指向本机，否则邮件服务器不能发送邮件到指定域</strong></p><p>我们测试使用修改hosts文件，打开&#x2F;etc&#x2F;hosts文件添加下面两行</p><figure class="highlight accesslog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs accesslog"><span class="hljs-number">127.0.0.1</span> mail.example.com<br><span class="hljs-number">127.0.0.1</span> example.com<br></code></pre></td></tr></table></figure><h3 id="安装mail命令"><a href="#安装mail命令" class="headerlink" title="安装mail命令"></a>安装mail命令</h3><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros">apt-<span class="hljs-built_in">get</span> install mailutils<br></code></pre></td></tr></table></figure><h3 id="添加测试账户"><a href="#添加测试账户" class="headerlink" title="添加测试账户"></a>添加测试账户</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">useradd -m -s /bin/bash mailuser1<br>passwd mailuser1<br>useradd -m -s /bin/bash mailuser2<br>passwd mailuser2<br></code></pre></td></tr></table></figure><h3 id="发送邮件"><a href="#发送邮件" class="headerlink" title="发送邮件"></a>发送邮件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">echo</span> <span class="hljs-string">&#x27;Here is the message body.&#x27;</span> | mail -s <span class="hljs-string">&quot;Test email from ubuntu server!&quot;</span> -r mailuser1@example.com  mailuser2@example.com<br></code></pre></td></tr></table></figure><h3 id="切换用户查看邮件"><a href="#切换用户查看邮件" class="headerlink" title="切换用户查看邮件"></a>切换用户查看邮件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs bash">su - mailuser2<br>mailuser2@ubuntu:~$ mail<br><span class="hljs-string">&quot;/var/mail/mailuser2&quot;</span>: 1 message 1 new<br>&gt;N   1 root               Tue Dec 22 17:30  13/465   Test email from ubuntu server!<br>? <br>Return-Path: &lt;mailuser1@example.com&gt;<br>X-Original-To: mailuser2@example.com<br>Delivered-To: mailuser2@example.com<br>Received: by ubuntu (Postfix, from userid 0)<br>        <span class="hljs-built_in">id</span> 52C4B7FDE2; Tue, 22 Dec 2020 17:30:55 +0800 (HKT)<br>Subject: Test email from ubuntu server!<br>To: &lt;mailuser2@example.com&gt;<br>X-Mailer: mail (GNU Mailutils 3.4)<br>Message-Id: &lt;20201222093055.52C4B7FDE2@ubuntu&gt;<br>Date: Tue, 22 Dec 2020 17:30:55 +0800 (HKT)<br>From: root &lt;mailuser1@example.com&gt;<br><br>Here is the message body.<br><br></code></pre></td></tr></table></figure><p><strong>postfix不支持远程读取邮件功能，所以邮件只能在服务器端打开，dovecot可以远程接收服务器中的邮件， 下面介绍如何安装和使用dovecot</strong></p><h2 id="搭建收邮件服务器"><a href="#搭建收邮件服务器" class="headerlink" title="搭建收邮件服务器"></a>搭建收邮件服务器</h2><h3 id="安装-dovecot"><a href="#安装-dovecot" class="headerlink" title="安装 dovecot"></a>安装 dovecot</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># Dovecot 是一个开源的 IMAP 和 POP3 邮件服务器</span><br><span class="hljs-comment"># POP / IMAP 是 MUA 从邮件服务器中读取邮件时使用的协议。</span><br><span class="hljs-comment"># 其中，与 POP3 是从邮件服务器中下载邮件存起来，IMAP4 则是将邮件留在服务器端直接对邮件进行管理、操作。</span><br>apt-get install dovecot-common dovecot-imapd dovecot-pop3d<br></code></pre></td></tr></table></figure><h3 id="配置dovecot"><a href="#配置dovecot" class="headerlink" title="配置dovecot"></a>配置dovecot</h3><p>测试不使用SSL，我们把配置文件中的关于安全的都关掉</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># /etc/dovecot/dovecot.conf</span><br><span class="hljs-comment"># 允许任何网络登录</span><br>login_trusted_networks = 0.0.0.0/0<br><br><br><span class="hljs-comment"># /etc/dovecot/conf.d/10-auth.conf</span><br><span class="hljs-comment"># 确保下面这行是注释状态</span><br><span class="hljs-comment"># disable_plaintext_auth = yes</span><br><br><span class="hljs-comment"># /etc/dovecot/conf.d/10-ssl.conf</span><br><span class="hljs-comment"># 确保不启用ssl</span><br>ssl = no<br><br><span class="hljs-comment"># /etc/dovecot/conf.d/10-mail.conf</span><br><span class="hljs-comment"># 确保本地邮件接收路径</span><br>mail_location = mbox:~/mail:INBOX=/var/mail/%u<br><span class="hljs-comment"># 默认下面这行没有注释</span><br>mbox_write_locks = fcntl<br><br><span class="hljs-comment"># 切换到各个用户下创建用户邮件目录</span><br>su - <span class="hljs-variable">$user</span><br><span class="hljs-built_in">mkdir</span> -p mail/.imap/INBOX<br></code></pre></td></tr></table></figure><h3 id="重启dovecot服务"><a href="#重启dovecot服务" class="headerlink" title="重启dovecot服务"></a>重启dovecot服务</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">systemctl <span class="hljs-built_in">enable</span> dovecot<br>systemctl restart dovecot<br></code></pre></td></tr></table></figure><h3 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h3><h4 id="发送邮件-1"><a href="#发送邮件-1" class="headerlink" title="发送邮件"></a>发送邮件</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">echo</span> <span class="hljs-string">&#x27;Here is the message body.&#x27;</span> | mail -s <span class="hljs-string">&quot;Test email from ubuntu server!&quot;</span> -r mailuser1@example.com  mailuser2@example.com<br></code></pre></td></tr></table></figure><h4 id="登录到其他机器，使用telnet收邮件"><a href="#登录到其他机器，使用telnet收邮件" class="headerlink" title="登录到其他机器，使用telnet收邮件"></a>登录到其他机器，使用telnet收邮件</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 登录到其他服务器</span><br>ssh root@172.16.3.225<br><span class="hljs-comment"># 使用telnet收邮件</span><br>telnet 172.16.3.226 110<br>Trying 172.16.3.226...<br>Connected to 172.16.3.226.<br>Escape character is <span class="hljs-string">&#x27;^]&#x27;</span>.<br>+OK [XCLIENT] Dovecot (Ubuntu) ready.<br>user mailuser2<br>+OK<br>pass 123456<br>+OK Logged <span class="hljs-keyword">in</span>.<br>list<br>+OK 1 messages:<br>1 478<br>.<br>retr 1<br>+OK 478 octets<br>Return-Path: &lt;mailuser1@example.com&gt;<br>X-Original-To: mailuser2@example.com<br>Delivered-To: mailuser2@example.com<br>Received: by ubuntu (Postfix, from userid 0)<br>        <span class="hljs-built_in">id</span> 52C4B7FDE2; Tue, 22 Dec 2020 17:30:55 +0800 (HKT)<br>Subject: Test email from ubuntu server!<br>To: &lt;mailuser2@example.com&gt;<br>X-Mailer: mail (GNU Mailutils 3.4)<br>Message-Id: &lt;20201222093055.52C4B7FDE2@ubuntu&gt;<br>Date: Tue, 22 Dec 2020 17:30:55 +0800 (HKT)<br>From: root &lt;mailuser1@example.com&gt;<br><br>Here is the message body.<br>.<br>quit<br>+OK Logging out.<br>Connection closed by foreign host.<br><span class="hljs-comment"># 收取邮件成功</span><br></code></pre></td></tr></table></figure><h2 id="telnet发送邮件"><a href="#telnet发送邮件" class="headerlink" title="telnet发送邮件"></a>telnet发送邮件</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs bash">通过 SMTP 协议发送邮件的整体过程如下：<br>    客户端使用 telnet 命令连接到SMTP服务器，建立会话。<br>    客户端发送一个 HELO 或 EHLO 命令。<br>    客户端发送一个 AUTH 认证命令进行用户登录（使用 smtpd 方式）。<br>    客户端发送一个 MAIL 命令指定发件人。<br>    客户端发送一个 RCPT 命令指定收件人。<br>    客户端发送一个 DATA 命令准备输入邮件正文。<br>    客户端发送一个 . 命令（点命令）表示 DATA 命令结束。<br>    客户端发送一个 QUIT 命令结束会话。<br>    <br>telnet mail.example.com 25<br>helo example.com<br>mail from:mailuser1@example.com<br>rcpt to:mailuser2@example.com<br>data<br>subobject: &lt;Test email from ubuntu server!&gt;<br>Here is the message body.<br>.&lt;回车结束&gt;<br><br>quit<br></code></pre></td></tr></table></figure><p><img src="https://gitee.com/liuxc0116/img01/raw/master/20210802121130.png" alt="img"></p><h2 id="telnet接收邮件"><a href="#telnet接收邮件" class="headerlink" title="telnet接收邮件"></a>telnet接收邮件</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><code class="hljs bash"><br>邮件的接收这里是基于pop3协议的，pop3协议共定义了12条与接收相关的邮件，如下面简单解释： <br><br>首先是与登陆验证相关的几条命令：<br><br>1，user 收件人帐户名称（有时候需要加后面的域名有时候却不要，好象不同的服务器要求不同，自己试吧）<br><br>2，pass 密码，这里是明码<br><br>3，apop 以MD5数字形式提交帐户和密码，以“,”分开，是第二种登陆方式<br><br>再就是登陆后操作邮件的一些命令：<br><br>4，<span class="hljs-built_in">stat</span> 查询邮箱中的所有邮件的统计信息，一般只有邮件总数和所有邮件占用的字节大小<br><br>5，uidl 根据邮件的序号查询该邮件的唯一标志符<br><br>6，list 查询邮箱中的所有邮件信息，以列表形式列出，自动生成邮件序号。如果指定某一序号则只显示指定邮件信息<br><br>7，retr 指定邮件序号查看某邮件内容<br><br>8，dele 指定邮件序号将某封邮件设置删除标记，当执行退出命令 quit时将实际删除所有具有删除标记的邮件<br><br>9，rset 清除所有设置了删除标记的邮件的删除标记<br><br>10，top 获取某邮件的邮件头和邮件体中的前n行内容，指定邮件序号和n，以空格符隔开<br><br>连接状态命令与退出命令：<br><br>11，noop 查询与pop3服务器的连接状态<br><br>12，quit 断开连接并退出<br>关于pop3服务器的响应，响应为 +OK 则为正确，响应为 -ERR 则为错误<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>邮箱</tag>
      
      <tag>email</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>markdown 绘制图形</title>
    <link href="/2021/10/21/typora%E5%9B%BE/"/>
    <url>/2021/10/21/typora%E5%9B%BE/</url>
    
    <content type="html"><![CDATA[<p><a href="https://mermaid-js.github.io/mermaid-live-editor/edit#eyJjb2RlIjoiZ3JhcGggVERcbiAgICBBW0NocmlzdG1hc10gLS0-fEdldCBtb25leXwgQihHbyBzaG9wcGluZylcbiAgICBCIC0tPiBDe0xldCBtZSB0aGlua31cbiAgICBDIC0tPnxPbmV8IERbTGFwdG9wXVxuICAgIEMgLS0-fFR3b3wgRVtpUGhvbmVdXG4gICAgQyAtLT58VGhyZWV8IEZbZmE6ZmEtY2FyIENhcl1cbiAgIiwibWVybWFpZCI6IntcbiAgXCJ0aGVtZVwiOiBcImRlZmF1bHRcIlxufSIsInVwZGF0ZUVkaXRvciI6dHJ1ZSwiYXV0b1N5bmMiOnRydWUsInVwZGF0ZURpYWdyYW0iOnRydWV9">在线制作图形并生成mermaid</a></p><h1 id="流程图"><a href="#流程图" class="headerlink" title="流程图"></a>流程图</h1><h2 id="流程图1"><a href="#流程图1" class="headerlink" title="流程图1"></a>流程图1</h2><p>PS: hexo不支持流程图需要安装flowchart插件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">npm install --save hexo-filter-flowchart<br></code></pre></td></tr></table></figure><ul><li>start：开始框</li><li>operation：处理框</li><li>condition：判断框</li><li>inputoutput：输入输出框</li><li>end：结束框</li><li>subroutine：子流程</li></ul><p>各框通过“-&gt;”连接。定义上述基本元素的语句是：</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs dart">元素ID=&gt;元素类型：展示文字<br><br>元素ID(方向）-&gt;元素ID<br></code></pre></td></tr></table></figure><p>其中，方向有以下四种</p><ul><li>top</li><li>bottom</li><li>right</li><li>left</li></ul><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs text">start1=&gt;start: 初始设计<br>op1=&gt;operation: P=0<br>op2=&gt;operation: 结构分析与敏度分析<br>op3=&gt;operation: 建立原问题（Primal Problem）<br>op4=&gt;operation: 建立近似问题（Approximate Proble）<br>op5=&gt;operation: 求解近似问题，得到$X^&#123;P+1&#125;$<br>cond1=&gt;condition: 是否小于允许误差<br>op6=&gt;operation: P=P+1<br>op7=&gt;inputoutput: 1=2=3<br>op8=&gt;subroutine: subroutine<br>end=&gt;end: 结束<br><br>start1-&gt;op1-&gt;op2-&gt;op3-&gt;op4-&gt;op5-&gt;op7-&gt;op8-&gt;cond1<br>cond1(no)-&gt;op6-&gt;op2<br>cond1(yes)-&gt;end<br></code></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs flow">start1=&gt;start: 初始设计<br>op1=&gt;operation: P=0<br>op2=&gt;operation: 结构分析与敏度分析<br>op3=&gt;operation: 建立原问题（Primal Problem）<br>op4=&gt;operation: 建立近似问题（Approximate Proble）<br>op5=&gt;operation: 求解近似问题，得到$X^&#123;P+1&#125;$<br>cond1=&gt;condition: 是否小于允许误差<br>op6=&gt;operation: P=P+1<br>op7=&gt;inputoutput: 1=2=3<br>op8=&gt;subroutine: subroutine<br>end=&gt;end: 结束<br><br>start1-&gt;op1-&gt;op2-&gt;op3-&gt;op4-&gt;op5-&gt;op7-&gt;op8-&gt;cond1<br>cond1(no)-&gt;op6-&gt;op2<br>cond1(yes)-&gt;end<br></code></pre></td></tr></table></figure><h2 id="流程图2"><a href="#流程图2" class="headerlink" title="流程图2"></a>流程图2</h2><p>思维导图实现简单流程图</p><figure class="highlight coq"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs coq">```mermaid<br>graph TD<br>    A[Christmas] --&gt;|<span class="hljs-type">Get</span> money| <span class="hljs-type">B</span>(Go shopping)<br>    B --&gt; C&#123;<span class="hljs-keyword">Let</span> me think&#125;<br>    C --&gt;|<span class="hljs-type">One</span>| <span class="hljs-type">D</span>[Laptop]<br>    C --&gt;|<span class="hljs-type">Two</span>| <span class="hljs-type">E</span>[iPhone]<br>    C --&gt;|<span class="hljs-type">Three</span>| <span class="hljs-type">F</span>[fa:fa-car Car]<br>    F --&gt; B<br>```<br></code></pre></td></tr></table></figure><pre><code class=" mermaid">graph TD    A[Christmas] --&gt;|Get money| B(Go shopping)    B --&gt; C&#123;Let me think&#125;    C --&gt;|One| D[Laptop]    C --&gt;|Two| E[iPhone]    C --&gt;|Three| F[fa:fa-car Car]    F --&gt; B</code></pre><h1 id="思维导出"><a href="#思维导出" class="headerlink" title="思维导出"></a>思维导出</h1><p>Typora的流程图分为横向和纵向的流程图。</p><p>具体来说，是通过mermaid语言的代码块来实现的。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs css">```mermaid<br>graph LR<br><span class="hljs-selector-tag">A</span><span class="hljs-selector-attr">[青柠学术]</span>--&gt;<span class="hljs-selector-tag">B</span><span class="hljs-selector-attr">[博主]</span><br><span class="hljs-selector-tag">A</span>--&gt;C<span class="hljs-selector-attr">[Up主]</span><br><span class="hljs-selector-tag">A</span>--&gt;D<span class="hljs-selector-attr">[社群]</span><br><span class="hljs-selector-tag">B</span>--&gt;E<span class="hljs-selector-attr">[公众号]</span><br><span class="hljs-selector-tag">B</span>--&gt;F<span class="hljs-selector-attr">[知乎]</span><br>C--&gt;H<span class="hljs-selector-attr">[B站]</span><br>C--&gt;<span class="hljs-selector-tag">I</span><span class="hljs-selector-attr">[荔枝微课]</span><br>D--&gt;J<span class="hljs-selector-attr">[知识星球]</span><br>D--&gt;K<span class="hljs-selector-attr">[微信群]</span><br>```<br></code></pre></td></tr></table></figure><pre><code class=" mermaid">graph LRA[青柠学术]--&gt;B[博主]A--&gt;C[Up主]A--&gt;D[社群]B--&gt;E[公众号]B--&gt;F[知乎]C--&gt;H[B站]C--&gt;I[荔枝微课]D--&gt;J[知识星球]D--&gt;K[微信群]</code></pre><p>写这样一个思维导图代码其实非常简单。</p><p>其中<code>mermaid</code>为代码块的语言，<code>graph LR</code>代表横向流程图。</p><p>框图中的每个节点用<code>ABCD...</code>代替，<strong>相同字母代表同一节点</strong>，节点内容在<code>[]</code>内填写。</p><p>以上是横向流程图，下面看下竖向思维导图。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs css">```mermaid<br>graph <span class="hljs-selector-tag">TD</span><br><span class="hljs-selector-tag">A</span><span class="hljs-selector-attr">[青柠学术]</span>--&gt;<span class="hljs-selector-tag">B</span><span class="hljs-selector-attr">[博主]</span><br><span class="hljs-selector-tag">A</span>--&gt;C<span class="hljs-selector-attr">[Up主]</span><br><span class="hljs-selector-tag">A</span>--&gt;D<span class="hljs-selector-attr">[社群]</span><br><span class="hljs-selector-tag">B</span>--&gt;E<span class="hljs-selector-attr">[公众号]</span><br><span class="hljs-selector-tag">B</span>--&gt;F<span class="hljs-selector-attr">[知乎]</span><br>C--&gt;H<span class="hljs-selector-attr">[B站]</span><br>C--&gt;<span class="hljs-selector-tag">I</span><span class="hljs-selector-attr">[荔枝微课]</span><br>D--&gt;J<span class="hljs-selector-attr">[知识星球]</span><br>D--&gt;K<span class="hljs-selector-attr">[微信群]</span><br>```<br></code></pre></td></tr></table></figure><pre><code class=" mermaid">graph TDA[青柠学术]--&gt;B[博主]A--&gt;C[Up主]A--&gt;D[社群]B--&gt;E[公众号]B--&gt;F[知乎]C--&gt;H[B站]C--&gt;I[荔枝微课]D--&gt;J[知识星球]D--&gt;K[微信群]</code></pre><h1 id="时序图"><a href="#时序图" class="headerlink" title="时序图"></a>时序图</h1><p>时序图的代码示例如下：</p><figure class="highlight xl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs xl">```mermaid<br>sequenceDiagram<br>    A<span class="hljs-function"><span class="hljs-title">lice</span>-&gt;</span>&gt;+John: Hello John, how are you?<br>    A<span class="hljs-function"><span class="hljs-title">lice</span>-&gt;</span>&gt;+Tom: Hello John, how are you?<br>    A<span class="hljs-function"><span class="hljs-title">lice</span>-&gt;</span>&gt;+John: John, can you hear me?<br>    J<span class="hljs-function"><span class="hljs-title">ohn</span>--&gt;</span>&gt;-Alice: Hi Alice, I can hear you!<br>    J<span class="hljs-function"><span class="hljs-title">ohn</span>--&gt;</span>&gt;-Alice: I feel great!<br>```<br></code></pre></td></tr></table></figure><pre><code class=" mermaid">sequenceDiagram    Alice-&gt;&gt;+John: Hello John, how are you?    Alice-&gt;&gt;+Tom: Hello John, how are you?    Alice-&gt;&gt;+John: John, can you hear me?    John--&gt;&gt;-Alice: Hi Alice, I can hear you!    John--&gt;&gt;-Alice: I feel great!</code></pre><h1 id="状态图"><a href="#状态图" class="headerlink" title="状态图"></a>状态图</h1><figure class="highlight xl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs xl">```mermaid<br>stateDiagram-v2<br>[*] --&gt; Still<br>S<span class="hljs-function"><span class="hljs-title">till</span> --&gt;</span> [*]<br>S<span class="hljs-function"><span class="hljs-title">till</span> --&gt;</span> Moving<br>M<span class="hljs-function"><span class="hljs-title">oving</span> --&gt;</span> Still<br>M<span class="hljs-function"><span class="hljs-title">oving</span> --&gt;</span> Crash<br>C<span class="hljs-function"><span class="hljs-title">rash</span> --&gt;</span> [*]<br>```<br></code></pre></td></tr></table></figure><pre><code class=" mermaid">stateDiagram-v2[*] --&gt; StillStill --&gt; [*]Still --&gt; MovingMoving --&gt; StillMoving --&gt; CrashCrash --&gt; [*]</code></pre><h1 id="饼图"><a href="#饼图" class="headerlink" title="饼图"></a>饼图</h1><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs ada">```mermaid<br>pie title Pets adopted by volunteers<br>    <span class="hljs-string">&quot;Dogs&quot;</span> : 386<br>    <span class="hljs-string">&quot;Cats&quot;</span> : 85<br>    <span class="hljs-string">&quot;Rats&quot;</span> : 15<br>```<br></code></pre></td></tr></table></figure><pre><code class=" mermaid">pie title Pets adopted by volunteers    &quot;Dogs&quot; : 386    &quot;Cats&quot; : 85    &quot;Rats&quot; : 15</code></pre>]]></content>
    
    
    
    <tags>
      
      <tag>typora</tag>
      
      <tag>mermaid</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>hexo安装及fluid主题插件安装</title>
    <link href="/2021/10/21/hexo%E5%AE%89%E8%A3%85%E5%8F%8Afluid%E4%B8%BB%E9%A2%98%E6%8F%92%E4%BB%B6%E5%AE%89%E8%A3%85/"/>
    <url>/2021/10/21/hexo%E5%AE%89%E8%A3%85%E5%8F%8Afluid%E4%B8%BB%E9%A2%98%E6%8F%92%E4%BB%B6%E5%AE%89%E8%A3%85/</url>
    
    <content type="html"><![CDATA[<p>此教程使用的操作系统是Ubuntu18.04。</p><h1 id="安装node"><a href="#安装node" class="headerlink" title="安装node"></a>安装node</h1><blockquote><p>使用nvm安装node及npm</p></blockquote><h2 id="安装nvm"><a href="#安装nvm" class="headerlink" title="安装nvm"></a>安装nvm</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># nvm</span><br>curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.0/install.sh | bash<br></code></pre></td></tr></table></figure><h2 id="使用nvm安装node"><a href="#使用nvm安装node" class="headerlink" title="使用nvm安装node"></a>使用nvm安装node</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 安装最新的node及npm</span><br>nvm install node<br><span class="hljs-comment"># 安装指定版本的node</span><br>nvm install 14.7.0 <span class="hljs-comment"># or 16.3.0, 12.22.1, etc</span><br></code></pre></td></tr></table></figure><p>不同系统的安装方法请参见 <a href="https://github.com/nvm-sh/nvm">nvm github官网</a></p><h1 id="安装hexo"><a href="#安装hexo" class="headerlink" title="安装hexo"></a>安装hexo</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">npm install -g hexo-cli<br></code></pre></td></tr></table></figure><h2 id="初始化hexo"><a href="#初始化hexo" class="headerlink" title="初始化hexo"></a>初始化hexo</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 新建博客目录</span><br><span class="hljs-built_in">mkdir</span> blog<br><span class="hljs-comment"># 进入文件</span><br><span class="hljs-built_in">cd</span> blog<br><span class="hljs-comment"># 下面所有hexo及npm命令均在blog文件夹下执行</span><br><span class="hljs-comment"># 初始化hexo</span><br>hexo init<br></code></pre></td></tr></table></figure><h2 id="安装fluid主题"><a href="#安装fluid主题" class="headerlink" title="安装fluid主题"></a>安装fluid主题</h2><h3 id="1-获取主题最新版本"><a href="#1-获取主题最新版本" class="headerlink" title="1.获取主题最新版本"></a>1.获取主题最新版本</h3><p><strong>方式一：</strong></p><p>Hexo 5.0.0 版本以上，推荐通过 npm 直接安装，进入博客目录执行命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 安装fluid</span><br>npm install --save hexo-theme-fluid<br><span class="hljs-comment"># 生成 _config.fluid.yml</span><br><span class="hljs-built_in">cat</span> ./node_modules/hexo-theme-fluid/_config.yml &gt; _config.fluid.yml<br></code></pre></td></tr></table></figure><p>然后在博客目录下（blog）创建<code> _config.fluid.yml</code>，将主题的 <a href="https://github.com/fluid-dev/hexo-theme-fluid/blob/master/_config.yml">_config.yml</a> 内容复制进去。</p><p><strong>方式二：</strong></p><p>下载 <a href="https://github.com/fluid-dev/hexo-theme-fluid/releases">最新 release 版本</a> 解压到 themes 目录，并将解压出的文件夹重命名为 <code>fluid</code>。</p><h3 id="2-指定主题"><a href="#2-指定主题" class="headerlink" title="2. 指定主题"></a>2. 指定主题</h3><p>如下修改 blog 博客目录中的 <code>_config.yml</code>：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">theme:</span> <span class="hljs-string">fluid</span>  <span class="hljs-comment"># 指定主题</span><br><span class="hljs-attr">language:</span> <span class="hljs-string">zh-CN</span>  <span class="hljs-comment"># 指定语言，会影响主题显示的语言，按需修改</span><br></code></pre></td></tr></table></figure><h3 id="3-创建「关于页」"><a href="#3-创建「关于页」" class="headerlink" title="3. 创建「关于页」"></a>3. 创建「关于页」</h3><p>首次使用主题的「关于页」需要手动创建：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">hexo new page about<br></code></pre></td></tr></table></figure><p>创建成功后，编辑博客目录下 <code>/source/about/index.md</code>，添加 <code>layout</code> 属性。</p><p>修改后的文件示例如下：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs markdown">---<br>title: about<br>date: 2020-02-23 19:20:33<br><span class="hljs-section">layout: about</span><br><span class="hljs-section">---</span><br><br>这里写关于页的正文，支持 Markdown, HTML<br></code></pre></td></tr></table></figure><p>fluid具体安装和使用文档请参考 <a href="https://github.com/fluid-dev/hexo-theme-fluid">github官网</a>  <a href="https://hexo.fluid-dev.com/docs/guide/">配置指南</a></p><h2 id="本地预览"><a href="#本地预览" class="headerlink" title="本地预览"></a>本地预览</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">生成静态文件</span><br>hexo g<br><span class="hljs-meta prompt_"># </span><span class="language-bash">开启服务</span><br>hexo s<br><span class="hljs-meta prompt_"># </span><span class="language-bash">在浏览器中访问 http://localhost:4000/ 即可预览</span><br></code></pre></td></tr></table></figure><h2 id="写文章"><a href="#写文章" class="headerlink" title="写文章"></a>写文章</h2><h3 id="使用hexo新建文章"><a href="#使用hexo新建文章" class="headerlink" title="使用hexo新建文章"></a>使用hexo新建文章</h3><p>使用hexo新建的文章会自动带上YAML，文章存放在blog&#x2F;source&#x2F;_posts目录下，在此目录下打开新建的md文件编写文章即可</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">hexo new &#x27;文章标题&#x27;<br></code></pre></td></tr></table></figure><h3 id="手动新建文章"><a href="#手动新建文章" class="headerlink" title="手动新建文章"></a>手动新建文章</h3><p>到blog&#x2F;source&#x2F;_posts目录下新建markdown文件。在文章开头加入以下内容</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-meta">---</span><br><span class="hljs-attr">title:</span> <span class="hljs-string">hexo安装及fluid主题插件安装</span><br><span class="hljs-attr">date:</span> <span class="hljs-number">2021-10-21 11:08:18</span><br><span class="hljs-attr">categories:</span> <br><span class="hljs-attr">tags:</span><br><span class="hljs-meta">---</span><br></code></pre></td></tr></table></figure><h1 id="部署到github上"><a href="#部署到github上" class="headerlink" title="部署到github上"></a>部署到github上</h1><h2 id="准备仓库"><a href="#准备仓库" class="headerlink" title="准备仓库"></a>准备仓库</h2><p>新建一个名字叫{your-name}.github.io的仓库，其中your-name是你的github名称，比如我的github名称叫jimmi，仓库名称就叫jimmi.github.io</p><h2 id="添加ssh公钥"><a href="#添加ssh公钥" class="headerlink" title="添加ssh公钥"></a>添加ssh公钥</h2><p>略</p><h2 id="配置hexo"><a href="#配置hexo" class="headerlink" title="配置hexo"></a>配置hexo</h2><p>由于使用ssh公钥免密访问，所以请复制ssh仓库地址</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">deploy:</span><br>  <span class="hljs-attr">type:</span> <span class="hljs-string">git</span><br>  <span class="hljs-attr">repository:</span> <span class="hljs-string">git@github.com:jimmi/jimmi.github.io.git</span><br>  <span class="hljs-attr">branch:</span> <span class="hljs-string">master</span><br></code></pre></td></tr></table></figure><h2 id="安装上传插件"><a href="#安装上传插件" class="headerlink" title="安装上传插件"></a>安装上传插件</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">npm install hexo-deployer-git  --save<br></code></pre></td></tr></table></figure><h2 id="发布到Github"><a href="#发布到Github" class="headerlink" title="发布到Github"></a>发布到Github</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># Remove generated files and cache.</span><br>hexo clean<br><span class="hljs-comment"># Generate static files.</span><br>hexo g<br><span class="hljs-comment"># Deploy your website.</span><br>hexo d<br></code></pre></td></tr></table></figure><h2 id="测试访问"><a href="#测试访问" class="headerlink" title="测试访问"></a>测试访问</h2><p>在浏览器访问 <a href="https://jimmi.github.io/">https://jimmi.github.io</a></p>]]></content>
    
    
    
    <tags>
      
      <tag>hexo</tag>
      
      <tag>个人博客</tag>
      
      <tag>fluid</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
